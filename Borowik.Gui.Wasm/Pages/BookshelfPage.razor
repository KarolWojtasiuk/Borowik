@page "/Bookshelf/{bookshelfId:guid}"
@using Borowik.Books.Contracts
@using Borowik.Books.Entities
@using Borowik.Books

<BookshelfHeader Bookshelf="_bookshelf" BookshelfUpdated="OnBookshelfUpdated"/>
<BooksView Bookshelf="_bookshelf" BooksChanged="LoadBookshelfAsync"/>

@code
{
    [Parameter]
    public Guid BookshelfId { get; set; }

    [Inject]
    private IBorowikManager BorowikManager { get; init; } = null!;

    [Inject]
    private ILoadingIndicatorService LoadingIndicatorService { get; init; } = null!;

    [Inject]
    private INotificationService NotificationService { get; init; } = null!;

    [Inject]
    private NavigationManager NavigationManager { get; init; } = null!;

    private BookshelfWithBooks? _bookshelf;

    protected override async Task OnParametersSetAsync()
    {
        await LoadBookshelfAsync();
    }

    private async Task LoadBookshelfAsync()
    {
        await LoadingIndicatorService.Show();

        try
        {
            var response = await BorowikManager.SendRequestAsync(new GetBookshelfRequest(BookshelfId), CancellationToken.None);
            _bookshelf = response.BookshelfWithBooks;
        }
        catch (BookExceptions.BookshelfNotFoundException e)
        {
            await NotificationService.Error(e.Message, "Error");
            NavigationManager.NavigateTo("/");
        }
        finally
        {
            await LoadingIndicatorService.Hide();
        }
    }

    private async Task OnBookshelfUpdated()
    {
        await LoadBookshelfAsync();
    }
}