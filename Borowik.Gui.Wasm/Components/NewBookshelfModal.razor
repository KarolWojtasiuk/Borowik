@using Blazorise.FluentValidation
@using Borowik.Books
@using System.Drawing
@using Borowik.Books.Contracts
@using Borowik.Books.Entities
@using Color = Blazorise.Color
@using Size = Blazorise.Size
<Form>
    <Modal @ref="_modal">
        <ModalContent>
            <ModalHeader>
                <ModalTitle Size="HeadingSize.Is4">New Bookshelf</ModalTitle>
                <CloseButton/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="_validations" Mode="ValidationMode.Manual" Model="@_model" HandlerType="typeof(FluentValidationHandler)">
                    <Validation>
                        <Field>
                            <FieldLabel>Title</FieldLabel>
                            <FieldBody>
                                <TextEdit Placeholder="Title" @bind-Text="@_model.Name">
                                    <Feedback>
                                        <ValidationError/>
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Description</FieldLabel>
                            <FieldBody>
                                <TextEdit Placeholder="Description" @bind-Text="@_model.Description">
                                    <Feedback>
                                        <ValidationError/>
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Color</FieldLabel>
                            <FieldBody>
                                <ColorEdit Size="Size.Medium" @bind-Color="@_model.Color">
                                    <Feedback>
                                        <ValidationError/>
                                    </Feedback>
                                </ColorEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Primary" Type="ButtonType.Submit" PreventDefaultOnSubmit Clicked="CreateAsync">Create</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
</Form>


@code {

    [Parameter]
    public EventCallback<Bookshelf> BookshelfCreated { get; set; }

    [Inject]
    private IExceptionHandler ExceptionHandler { get; init; } = null!;

    [Inject]
    private IBorowikManager BorowikManager { get; init; } = null!;

    private Modal _modal = null!;
    private Validations _validations = null!;
    private NewBookshelfModel _model = new();

    public async Task ShowAsync()
    {
        await _modal.Show();
    }

    private async Task CreateAsync()
    {
        if (!await _validations.ValidateAll())
            return;

        var response = await ExceptionHandler.HandleAsync(() =>
            BorowikManager.SendRequestAsync(
                new CreateBookshelfRequest(_model.Name, _model.Description, ColorTranslator.FromHtml(_model.Color)),
                CancellationToken.None));

        await _modal.Close(CloseReason.UserClosing);
        await BookshelfCreated.InvokeAsync(response.Bookshelf);

        _model = new NewBookshelfModel();
        await _validations.ClearAll();
    }
}